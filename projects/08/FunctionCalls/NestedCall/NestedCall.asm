@SP
M=0
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
M=M+1
// L0: function Sys.init 0
(Sys.init)
// L1: push constant 4000	
@4000
D=A
@SP
A=M
M=D
@SP
M=M+1
// L2: pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// L3: push constant 5000
@5000
D=A
@SP
A=M
M=D
@SP
M=M+1
// L4: pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// L5: call Sys.main 0
@339
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.main
0;JMP
// L6: pop temp 1
@SP
M=M-1
A=M
D=M
@5
A=A+1
M=D
// L7: label LOOP
(LOOP)
// L8: goto LOOP
@LOOP
0;JMP
// L9: function Sys.main 5
(Sys.main)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// L10: push constant 4001
@4001
D=A
@SP
A=M
M=D
@SP
M=M+1
// L11: pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// L12: push constant 5001
@5001
D=A
@SP
A=M
M=D
@SP
M=M+1
// L13: pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// L14: push constant 200
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
// L15: pop local 1
@SP
M=M-1
A=M
D=M
@LCL
A=M
A=A+1
M=D
// L16: push constant 40
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
// L17: pop local 2
@SP
M=M-1
A=M
D=M
@LCL
A=M
A=A+1
A=A+1
M=D
// L18: push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// L19: pop local 3
@SP
M=M-1
A=M
D=M
@LCL
A=M
A=A+1
A=A+1
A=A+1
M=D
// L20: push constant 123
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
// L21: call Sys.add12 1
@515
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.add12
0;JMP
// L22: pop temp 0
@SP
M=M-1
A=M
D=M
@5
M=D
// L23: push local 0
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// L24: push local 1
@LCL
A=M
A=A+1
D=M
@SP
A=M
M=D
@SP
M=M+1
// L25: push local 2
@LCL
A=M
A=A+1
A=A+1
D=M
@SP
A=M
M=D
@SP
M=M+1
// L26: push local 3
@LCL
A=M
A=A+1
A=A+1
A=A+1
D=M
@SP
A=M
M=D
@SP
M=M+1
// L27: push local 4
@LCL
A=M
A=A+1
A=A+1
A=A+1
A=A+1
D=M
@SP
A=M
M=D
@SP
M=M+1
// L28: add
@SP
A=M-1
A=A-1
D=M
@SP
A=M-1
D=D+M
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
// L29: add
@SP
A=M-1
A=A-1
D=M
@SP
A=M-1
D=D+M
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
// L30: add
@SP
A=M-1
A=A-1
D=M
@SP
A=M-1
D=D+M
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
// L31: add
@SP
A=M-1
A=A-1
D=M
@SP
A=M-1
D=D+M
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
// L32: return
@LCL
D=M
@R13
M=D
@LCL
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
// L33: function Sys.add12 0
(Sys.add12)
// L34: push constant 4002
@4002
D=A
@SP
A=M
M=D
@SP
M=M+1
// L35: pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D
// L36: push constant 5002
@5002
D=A
@SP
A=M
M=D
@SP
M=M+1
// L37: pop pointer 1
@SP
M=M-1
A=M
D=M
@THAT
M=D
// L38: push argument 0
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// L39: push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
// L40: add
@SP
A=M-1
A=A-1
D=M
@SP
A=M-1
D=D+M
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
// L41: return
@LCL
D=M
@R13
M=D
@LCL
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
